

@mixin sw-button($color) {
  color: $color;
  border-color: $color;

  &:not(.mini) {
    background-color: rgba($color, 0.1);
  }

  &.mini {
    background-color: transparent;
    @include button-center-glow($color);
  }

  &:hover, &:focus {
    outline: 0;

    &:not(.mini) {
      background-color: rgba($color, 0.2);
    }
  }

  &:focus {
    box-shadow: 0 0 10px $color inset;
  }

  &:active:not(.mini) {
    background-color: rgba($color, 0.4);
    box-shadow: 0 0 10px $color inset;
  }

  &:hover, &:focus, &:active {
    color: $color;

    &.mini {
      background-color: transparent;
      box-shadow: none;
    }
  }

  &[disabled] {
    cursor: not-allowed;
    color: $color;
    border-color: $color;
    background-color: rgba($color, 0.1);

    &:hover, &:focus, &:active {
      color: $color;
      border-color: $color;
      background-color: rgba($color, 0.1);
    }
  }

  &.postfix {
    border-top: $interfaceBorderSize $interfaceBorderStyle $color;
    border-right: $interfaceBorderSize $interfaceBorderStyle $color;
    border-bottom: $interfaceBorderSize $interfaceBorderStyle $color;
    @include postfix-border-radius(2px);
  }

}

button, .button {
  text-transform: uppercase;
  border-style: solid;
  border-width: 2px;
  border-radius: 2px;
  @include sw-button($primaryColor);

  &.secondary {
    @include sw-button($secondaryColor);
  }

  &.alert {
    @include sw-button($alertColor);
  }

  &.success {
    @include sw-button($successColor);
  }

  &.warning {
    @include sw-button($warningColor);
  }

  &.info {
    @include sw-button($infoColor);
  }

  &.mini {
    font-size: rem-calc(22);
    padding: rem-calc(9px) rem-calc(14px);
    border-width: 0;

    @media #{$large-up} {
      font-size: rem-calc(18);
      padding: rem-calc(6) rem-calc(10);
    }
  }
}


